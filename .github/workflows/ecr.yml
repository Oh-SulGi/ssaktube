name: Deploy to ECR

on:
    push:
        branches: [main]

jobs:
    build:
        name: Build and Push Image to ECR
        runs-on: ubuntu-latest

        steps:
            - name: Check out code1
              uses: actions/checkout@v4

            - name: Create .env file
              run: |
                  echo "MEDIA_API=${{ secrets.MEDIA_API }}" >> .env
                  echo "USER_API=${{ secrets.USER_API }}" >> .env
                  echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
                  echo "AWS_IDENTITY_POOL=${{ secrets.AWS_IDENTITY_POOL }}" >> .env
                  echo "AWS_USER_POOL_ID=${{ secrets.AWS_USER_POOL_ID }}" >> .env
                  echo "AWS_LOGO_BUCKET=${{ secrets.AWS_LOGO_BUCKET }}" >> .env
                  echo "AWS_VOD_BUCKET=${{ secrets.AWS_VOD_BUCKET }}" >> .env
                  echo "MEILI_HOST=${{ secrets.MEILI_HOST }}" >> .env
                  echo "MEILI_API=${{ secrets.MEILI_API }}" >> .env

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-northeast-2

            - name: Get ECR login password
              run: |
                  echo "$(aws ecr get-login-password --region ap-northeast-1)" | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            - name: Build, tag, and push image to Amazon ECR
              run: |
                  IMAGE_TAG=${{ github.run_number }}
                  LATEST_TAG=latest
                  IMAGE_REPO=${{ secrets.IMAGE_REPO }}
                  ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
                  docker build -t $IMAGE_REPO:$IMAGE_TAG .
                  docker tag $IMAGE_REPO:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_REPO:$IMAGE_TAG
                  docker push $ECR_REGISTRY/$IMAGE_REPO:$IMAGE_TAG

                  docker tag $IMAGE_REPO:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_REPO:$LATEST_TAG
                  docker push $ECR_REGISTRY/$IMAGE_REPO:$LATEST_TAG
